<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="SmoothToken" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="CyPhy Director" class="ptolemy.domains.qss.kernel.QSSDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="3.0">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{70.0, 30.0}">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={253, 22, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{355.0, 253.43359375}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This model generates a signal that, at each second interval, alternates&#10;between a rising quadratic and a falling quadratic. It shows that signals&#10;generated with SmoothTokens can be sampled at any time, and their value&#10;is extrapolated, and that zero crossings are detected exactly.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[145.0, -5.0]">
        </property>
    </property>
    <entity name="Sampler" class="ptolemy.actor.lib.Sampler">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{370.0, 230.0}">
        </property>
        <port name="input" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter" value="">
            </property>
        </port>
    </entity>
    <entity name="TimedDisplay2" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={503, 681, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{610.0, 230.0}">
        </property>
    </entity>
    <entity name="TimedDisplay3" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={94, 681, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{310.0, 165.0}">
        </property>
    </entity>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="0.1">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{200.0, 320.0}">
        </property>
    </entity>
    <entity name="TimedPlotter" class="ptolemy.actor.lib.gui.TimedPlotter">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={719, 510, 500, 344}, maximized=false}">
        </property>
        <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[500, 300]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{610.0, 160.0}">
        </property>
        <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>TimedPlotter</title>
<xLabel></xLabel>
<yLabel></yLabel>
<xRange min="0.0" max="3.0"/>
<yRange min="-1.4950000000000014" max="1.4950000000000014"/>
<default connected="no" marks="dots" stems="yes"/>
</plot>?>
        </configure>
    </entity>
    <entity name="SmoothZeroCrossingDetector" class="ptolemy.domains.qss.lib.SmoothZeroCrossingDetector">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{320.0, 105.0}">
        </property>
    </entity>
    <entity name="TimedDisplay" class="ptolemy.actor.lib.gui.TimedDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={125, 578, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{500.0, 105.0}">
        </property>
    </entity>
    <entity name="DiscreteClock2" class="ptolemy.actor.lib.DiscreteClock">
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="2.0">
        </property>
        <property name="offsets" class="ptolemy.data.expr.Parameter" value="{0.0, 1.0}">
        </property>
        <property name="values" class="ptolemy.data.expr.Parameter" value="{smoothToken(1.0, {1.0, -1.0}), smoothToken(-1.0, {-1.0, 1.0})}">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{70.0, 230.0}">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="{270.0, 230.0}">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;Sampler.input&quot;,x=370.0,y=230.0}, tail={id=&quot;relation.vertex1&quot;,x=270.0,y=230.0}, points={} },{ head={id=&quot;TimedDisplay3.input&quot;,x=310.0,y=165.0}, tail={id=&quot;relation.vertex1&quot;,x=270.0,y=230.0}, points={270.0,165.0} },{ head={id=&quot;SmoothZeroCrossingDetector.input&quot;,x=320.0,y=105.0}, tail={id=&quot;relation.vertex1&quot;,x=270.0,y=230.0}, points={270.0,105.0} },{ head={id=&quot;DiscreteClock2.output&quot;,x=70.0,y=230.0}, tail={id=&quot;relation.vertex1&quot;,x=270.0,y=230.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;Sampler.trigger&quot;,x=370.0,y=230.0}, tail={id=&quot;DiscreteClock.output&quot;,x=200.0,y=320.0}, points={370.0,320.0} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="{570.0, 230.0}">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;Sampler.output&quot;,x=370.0,y=230.0}, tail={id=&quot;relation3.vertex1&quot;,x=570.0,y=230.0}, points={} },{ head={id=&quot;TimedPlotter.input&quot;,x=610.0,y=160.0}, tail={id=&quot;relation3.vertex1&quot;,x=570.0,y=230.0}, points={570.0,160.0} },{ head={id=&quot;TimedDisplay2.input&quot;,x=610.0,y=230.0}, tail={id=&quot;relation3.vertex1&quot;,x=570.0,y=230.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;SmoothZeroCrossingDetector.output&quot;,x=320.0,y=105.0}, tail={id=&quot;TimedDisplay.input&quot;,x=500.0,y=105.0}, points={} } }">
        </property>
    </relation>
    <link port="Sampler.input" relation="relation"/>
    <link port="Sampler.output" relation="relation3"/>
    <link port="Sampler.trigger" relation="relation2"/>
    <link port="TimedDisplay2.input" relation="relation3"/>
    <link port="TimedDisplay3.input" relation="relation"/>
    <link port="DiscreteClock.output" relation="relation2"/>
    <link port="TimedPlotter.input" relation="relation3"/>
    <link port="SmoothZeroCrossingDetector.input" relation="relation"/>
    <link port="SmoothZeroCrossingDetector.output" relation="relation4"/>
    <link port="TimedDisplay.input" relation="relation4"/>
    <link port="DiscreteClock2.output" relation="relation"/>
</entity>
