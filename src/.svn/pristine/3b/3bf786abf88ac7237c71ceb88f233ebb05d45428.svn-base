<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="CSVWriterOrdered" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="9.1.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={48, 88, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.186458893068243">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{377.78125, 318.7359601449275}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="false">
    </property>
    <property name="SDF Director" class="ptolemy.domains.sdf.kernel.SDFDirector">
        <property name="iterations" class="ptolemy.data.expr.Parameter" value="8">
        </property>
        <property name="period" class="ptolemy.data.expr.Parameter" value="1E-6">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 165.0]">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Check to make sure that CSVWriter preserves the order in an OrderedRecordToken.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[85.0, 455.0]">
        </property>
    </property>
    <entity name="OrderedRecordAssembler" class="ptolemy.actor.lib.OrderedRecordAssembler">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{460.0, 275.0}">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="[t=double,&quot;rectifier1.Capacitor1_v&quot;=double, &quot;rectifier1.IdealDiode3_off&quot;=int]">
            </property>
        </port>
        <port name="t" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="capacitor" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <display name="rectifier1.Capacitor1_v"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="diode" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <display name="rectifier1.IdealDiode3_off"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="int">
            </property>
        </port>
    </entity>
    <entity name="CurrentTime" class="ptolemy.actor.lib.CurrentTime">
        <doc>Output the current time.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{280.0, 200.0}">
        </property>
    </entity>
    <entity name="Ramp" class="ptolemy.actor.lib.Ramp">
        <doc>Create a sequence of tokens with increasing value</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{190, 295}">
        </property>
    </entity>
    <entity name="Sequence" class="ptolemy.actor.lib.Sequence">
        <property name="values" class="ptolemy.data.expr.Parameter" value="{1,0}">
        </property>
        <property name="repeat" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{230, 345}">
        </property>
    </entity>
    <entity name="CSVWriter" class="ptolemy.actor.lib.io.CSVWriter">
        <property name="fileName" class="ptolemy.actor.parameters.FilePortParameter" value="CSVWriterOrderedOut.csv">
        </property>
        <property name="append" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="confirmOverwrite" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{530, 405}">
        </property>
        <port name="input" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="multiport"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="[t=double,&quot;rectifier1.Capacitor1_v&quot;=double, &quot;rectifier1.IdealDiode3_off&quot;=int]">
            </property>
        </port>
    </entity>
    <entity name="Test" class="ptolemy.actor.lib.Test">
        <property name="correctValues" class="ptolemy.data.expr.Parameter" value="{[t = 0.0, &quot;rectifier1.Capacitor1_v&quot; = 0.0, &quot;rectifier1.IdealDiode3_off&quot; = 1], [t = 1.0E-6, &quot;rectifier1.Capacitor1_v&quot; = 1.0, &quot;rectifier1.IdealDiode3_off&quot; = 0], [t = 2.0E-6, &quot;rectifier1.Capacitor1_v&quot; = 2.0, &quot;rectifier1.IdealDiode3_off&quot; = 1], [t = 3.0E-6, &quot;rectifier1.Capacitor1_v&quot; = 3.0, &quot;rectifier1.IdealDiode3_off&quot; = 0], [t = 4.0E-6, &quot;rectifier1.Capacitor1_v&quot; = 4.0, &quot;rectifier1.IdealDiode3_off&quot; = 1], [t = 5.0E-6, &quot;rectifier1.Capacitor1_v&quot; = 5.0, &quot;rectifier1.IdealDiode3_off&quot; = 0], [t = 6.0E-6, &quot;rectifier1.Capacitor1_v&quot; = 6.0, &quot;rectifier1.IdealDiode3_off&quot; = 1], [t = 7.0E-6, &quot;rectifier1.Capacitor1_v&quot; = 7.0, &quot;rectifier1.IdealDiode3_off&quot; = 0]}">
        </property>
        <property name="trainingMode" class="ptolemy.actor.parameters.SharedParameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[570.0, 320.0]">
        </property>
    </entity>
    <entity name="TypeTest" class="ptolemy.actor.lib.TypeTest">
        <property name="parameterTypes" class="ptolemy.data.expr.Parameter" value="{CSVWriter = {alwaysFlush = &quot;boolean&quot;, append = &quot;boolean&quot;, confirmOverwrite = &quot;boolean&quot;, endOfLineCharacter = &quot;string&quot;, fileName = &quot;string&quot;, separator = &quot;string&quot;}, CurrentTime = {stopTime = &quot;double&quot;, stopTimeIsLocal = &quot;boolean&quot;, useLocalTime = &quot;boolean&quot;}, Ramp = {NONE = &quot;int&quot;, firingCountLimit = &quot;int&quot;, init = &quot;int&quot;, step = &quot;int&quot;}, Sequence = {holdLastOutput = &quot;boolean&quot;, repeat = &quot;boolean&quot;, values = &quot;arrayType(int,2)&quot;}, Test = {correctValues = &quot;arrayType({\&quot;rectifier1.Capacitor1_v\&quot; = double, \&quot;rectifier1.IdealDiode3_off\&quot; = int, t = double},8)&quot;, requireAllCorrectValues = &quot;boolean&quot;, tolerance = &quot;double&quot;, trainingMode = &quot;boolean&quot;}}">
        </property>
        <property name="portTypes" class="ptolemy.data.expr.Parameter" value="{CSVWriter = {fileName = &quot;string&quot;, input = &quot;{\&quot;rectifier1.Capacitor1_v\&quot; = double, \&quot;rectifier1.IdealDiode3_off\&quot; = int, t = double}&quot;}, CurrentTime = {output = &quot;double&quot;, trigger = &quot;unknown&quot;}, OrderedRecordAssembler = {capacitor = &quot;double&quot;, diode = &quot;int&quot;, output = &quot;{\&quot;rectifier1.Capacitor1_v\&quot; = double, \&quot;rectifier1.IdealDiode3_off\&quot; = int, t = double}&quot;, t = &quot;double&quot;}, Ramp = {init = &quot;int&quot;, output = &quot;int&quot;, step = &quot;int&quot;, trigger = &quot;unknown&quot;}, Sequence = {enable = &quot;boolean&quot;, output = &quot;int&quot;}, Test = {input = &quot;{\&quot;rectifier1.Capacitor1_v\&quot; = double, \&quot;rectifier1.IdealDiode3_off\&quot; = int, t = double}&quot;, output = &quot;boolean&quot;}}">
        </property>
        <property name="trainingMode" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{555, 200}">
        </property>
    </entity>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;CurrentTime.output&quot;,x=280.0,y=200.0}, tail={id=&quot;OrderedRecordAssembler.t&quot;,x=460.0,y=275.0}, points={355.0,200.0,355.0,285.0} } }">
        </property>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="{495.0, 340.0}">
        </vertex>
    </relation>
    <link port="OrderedRecordAssembler.output" relation="relation5"/>
    <link port="OrderedRecordAssembler.t" relation="relation3"/>
    <link port="OrderedRecordAssembler.capacitor" relation="relation"/>
    <link port="OrderedRecordAssembler.diode" relation="relation2"/>
    <link port="CurrentTime.output" relation="relation3"/>
    <link port="Ramp.output" relation="relation"/>
    <link port="Sequence.output" relation="relation2"/>
    <link port="CSVWriter.input" relation="relation5"/>
    <link port="Test.input" relation="relation5"/>
    <link port="TypeTest.input" relation="relation5"/>
</entity>
