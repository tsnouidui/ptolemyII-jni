<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="SpeakingServerListeningClient" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="10">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[70.0, 45.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={136, 266, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{340.0, 252.0}">
    </property>
    <entity name="WSServer" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var WebSocket = require('webSocket');&#10;&#10;function onListening() {&#10;  print('server: listening');&#10;}&#10;&#10;// React to a connection established.&#10;var connected = false;&#10;var clientWs = null;&#10;function onConnection(ws) {&#10;  print('server: a client is connected');&#10;  connected = true;&#10;  ws.send('hi client!');&#10;  clientWs = ws;&#10;}&#10;&#10;// The web socket server, once created.&#10;var server = null;&#10;// Start an HTTP server and begin listening for connection requests.&#10;&#10;// If there already is a server, do nothing.&#10;exports.initialize = function() {&#10;  if (server == null) {&#10;    server = new WebSocket.Server({port:8081});&#10;    server.on('listening', onListening);&#10;    server.on('connection', onConnection);&#10;    server.startServer();&#10;  }&#10;}&#10;exports.fire = function()&#10;{&#10;  print('server: triggered');&#10;  if (connected) {&#10;    print('connected = true');&#10;  }&#10;  if (clientWs == null) {&#10;    print('server: clientWs is null');&#10;  }&#10;  else {&#10;    print('server: sending to client');&#10;    clientWs.send('hi again');&#10;  }&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
                <property name="height" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="30">
                </property>
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[280.0, 110.0]">
        </property>
        <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="started" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
            </property>
        </port>
    </entity>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="1">
        </property>
        <property name="offsets" class="ptolemy.data.expr.Parameter" value="{0.0}">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[75.0, 110.0]">
        </property>
    </entity>
    <entity name="WSClient" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var WebSocket = require('webSocket');&#10;&#10;var opened = false;&#10;&#10;function onMessage(data, flags) {&#10;  print('client: onMessage');&#10;  if (flags.binary) {&#10;    data = WebSocket.binToStr(data);&#10;  }&#10;  send('Client received a message: ' + data, output);&#10;}&#10;&#10;var ws = null;&#10;var count = 0;&#10;&#10;function onOpen() {&#10;  opened = true;&#10;}&#10;&#10;exports.initialize = function() {&#10;  if (ws == null) {&#10;    print('client: connecting to a server');&#10;    ws = new WebSocket.Socket('ws://localhost:8081');&#10;    ws.on('open', onOpen);&#10;    ws.on('message', onMessage);&#10;  }&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
                <property name="height" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="30">
                </property>
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[75.0, 200.0]">
        </property>
        <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={941, 617, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[290.0, 200.0]">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="WSServer.trigger" relation="relation"/>
    <link port="DiscreteClock.output" relation="relation"/>
    <link port="WSClient.output" relation="relation2"/>
    <link port="Display.input" relation="relation2"/>
</entity>
